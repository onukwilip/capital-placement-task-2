import React, { FC, useState } from "react";
import css from "../styles/SideMenu.module.scss";
import { MenuClass } from "../utils/utils";

const HomeIcon: FC<{ activeColor: string | undefined }> = ({ activeColor }) => {
  return (
    <svg
      width="18"
      height="18"
      viewBox="0 0 18 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M17 14.0001V8.45216V8.45141C17 7.91758 17 7.65052 16.9351 7.40199C16.8775 7.18165 16.7827 6.97269 16.6548 6.78426C16.5104 6.57164 16.3096 6.39575 15.9074 6.04389L11.1074 1.84389C10.3608 1.1906 9.98751 0.864003 9.56738 0.73976C9.19719 0.630285 8.80281 0.630285 8.43262 0.73976C8.01272 0.863935 7.63979 1.19025 6.894 1.84281L6.89278 1.84389L2.09277 6.04389L2.09182 6.04473C1.69032 6.39603 1.48944 6.57181 1.34521 6.78427C1.2173 6.97269 1.12255 7.18165 1.06497 7.40199C1 7.65063 1 7.91782 1 8.45216V14.0001C1 14.932 1 15.3978 1.15224 15.7654C1.35523 16.2554 1.74481 16.6448 2.23486 16.8478C2.60241 17 3.06835 17 4.00023 17C4.93211 17 5.39782 17 5.76537 16.8478C6.25542 16.6448 6.64467 16.2554 6.84766 15.7654C6.9999 15.3978 7 14.9319 7 14V13C7 11.8954 7.89543 11 9 11C10.1046 11 11 11.8954 11 13V14C11 14.9319 11 15.3978 11.1522 15.7654C11.3552 16.2554 11.7448 16.6448 12.2349 16.8478C12.6024 17 13.0683 17 14.0002 17C14.9321 17 15.3978 17 15.7654 16.8478C16.2554 16.6448 16.6447 16.2554 16.8477 15.7654C16.9999 15.3978 17 14.932 17 14.0001Z"
        stroke={activeColor || "#0B0B0B"}
        stroke-width="1.2"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  );
};

const UsersIcon: FC<{ activeColor: string | undefined }> = ({
  activeColor,
}) => {
  return (
    <svg
      width="20"
      height="17"
      viewBox="0 0 20 17"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M15 16C15 14.3431 12.7614 13 10 13C7.23858 13 5 14.3431 5 16M19 12.9999C19 11.7697 17.7659 10.7124 16 10.2495M1 12.9999C1 11.7697 2.2341 10.7124 4 10.2495M16 6.23611C16.6137 5.68679 17 4.8885 17 4C17 2.34315 15.6569 1 14 1C13.2316 1 12.5308 1.28885 12 1.76389M4 6.23611C3.38625 5.68679 3 4.8885 3 4C3 2.34315 4.34315 1 6 1C6.76835 1 7.46924 1.28885 8 1.76389M10 10C8.34315 10 7 8.65685 7 7C7 5.34315 8.34315 4 10 4C11.6569 4 13 5.34315 13 7C13 8.65685 11.6569 10 10 10Z"
        stroke={activeColor || "#0B0B0B"}
        stroke-width="1.2"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  );
};

const ShareIcon: FC<{ activeColor: string | undefined }> = ({
  activeColor,
}) => {
  return (
    <svg
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M7 11.5L13 14.5M13 5.5L7 8.5M16 19C14.3431 19 13 17.6569 13 16C13 14.3431 14.3431 13 16 13C17.6569 13 19 14.3431 19 16C19 17.6569 17.6569 19 16 19ZM4 13C2.34315 13 1 11.6569 1 10C1 8.34315 2.34315 7 4 7C5.65685 7 7 8.34315 7 10C7 11.6569 5.65685 13 4 13ZM16 7C14.3431 7 13 5.65685 13 4C13 2.34315 14.3431 1 16 1C17.6569 1 19 2.34315 19 4C19 5.65685 17.6569 7 16 7Z"
        stroke={activeColor || "#0B0B0B"}
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  );
};

const FileIcon: FC<{ activeColor: string | undefined }> = ({ activeColor }) => {
  return (
    <svg
      width="16"
      height="20"
      viewBox="0 0 16 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M5 15H11M5 12H11M14.9996 7H10.5996C10.0396 7 9.75981 6.99998 9.5459 6.89099C9.35774 6.79512 9.20487 6.64218 9.10899 6.45401C9 6.2401 9 5.96005 9 5.4V1M15 15.8V7.65399C15 7.19048 15.0002 6.95872 14.9502 6.73932C14.9059 6.54475 14.8328 6.35788 14.7332 6.18499C14.6208 5.99002 14.4632 5.81997 14.1483 5.47986L10.9502 2.02588C10.6002 1.64789 10.425 1.45888 10.2168 1.32343C10.0322 1.20337 9.82865 1.11464 9.61515 1.06077C9.37428 1 9.11721 1 8.60207 1H4.2002C3.08009 1 2.51962 1 2.0918 1.21799C1.71547 1.40973 1.40973 1.71572 1.21799 2.09204C1 2.51986 1 3.07991 1 4.20001V15.8C1 16.9201 1 17.4801 1.21799 17.908C1.40973 18.2843 1.71547 18.5902 2.0918 18.782C2.51962 19 3.08009 19 4.2002 19H11.8002C12.9203 19 13.48 19 13.9078 18.782C14.2841 18.5902 14.5905 18.2843 14.7822 17.908C15.0002 17.4801 15 16.9201 15 15.8Z"
        stroke={activeColor || "#0B0B0B"}
        stroke-width="1.2"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  );
};

const BookIcon: FC<{ activeColor: string | undefined }> = ({ activeColor }) => {
  return (
    <svg
      width="18"
      height="18"
      viewBox="0 0 18 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M1.21799 2.09204L1.66349 2.31904L1.21799 2.09204ZM2.0918 1.21799L2.31879 1.66349L2.0918 1.21799ZM2.0918 16.782L2.31879 16.3365L2.0918 16.782ZM1.21799 15.908L0.772484 16.135H0.772484L1.21799 15.908ZM16.7822 15.908L16.3367 15.681L16.7822 15.908ZM15.9078 16.782L15.6808 16.3365L15.9078 16.782ZM16.7822 2.09204L16.3367 2.31904L16.7822 2.09204ZM15.9078 1.21799L16.1348 0.772484L15.9078 1.21799ZM9 7.5C8.72386 7.5 8.5 7.72386 8.5 8C8.5 8.27614 8.72386 8.5 9 8.5V7.5ZM13 8.5C13.2761 8.5 13.5 8.27614 13.5 8C13.5 7.72386 13.2761 7.5 13 7.5V8.5ZM9 4.5C8.72386 4.5 8.5 4.72386 8.5 5C8.5 5.27614 8.72386 5.5 9 5.5V4.5ZM13 5.5C13.2761 5.5 13.5 5.27614 13.5 5C13.5 4.72386 13.2761 4.5 13 4.5V5.5ZM4.5 17C4.5 17.2761 4.72386 17.5 5 17.5C5.27614 17.5 5.5 17.2761 5.5 17H4.5ZM5.5 1C5.5 0.723858 5.27614 0.5 5 0.5C4.72386 0.5 4.5 0.723858 4.5 1L5.5 1ZM16.5 4.20001V13.8H17.5V4.20001H16.5ZM13.8002 16.5H4.2002V17.5H13.8002V16.5ZM1.5 13.8V4.20001H0.5V13.8H1.5ZM4.2002 1.5H13.8002V0.5H4.2002V1.5ZM1.5 4.20001C1.5 3.63171 1.50039 3.23556 1.52559 2.92714C1.55031 2.62456 1.5964 2.45071 1.66349 2.31904L0.772484 1.86505C0.62159 2.16119 0.558684 2.48128 0.528909 2.8457C0.499611 3.20429 0.5 3.64821 0.5 4.20001H1.5ZM4.2002 0.5C3.64839 0.5 3.20437 0.499611 2.84569 0.528908C2.4812 0.558678 2.16098 0.621575 1.8648 0.772484L2.31879 1.66349C2.45044 1.59641 2.62436 1.55032 2.92709 1.52559C3.23563 1.50039 3.6319 1.5 4.2002 1.5V0.5ZM1.66349 2.31904C1.80737 2.03666 2.03668 1.80723 2.31879 1.66349L1.8648 0.772484C1.39427 1.01223 1.0121 1.39477 0.772484 1.86505L1.66349 2.31904ZM4.2002 16.5C3.6319 16.5 3.23563 16.4996 2.92711 16.4744C2.62438 16.4497 2.45045 16.4036 2.31879 16.3365L1.8648 17.2275C2.16097 17.3784 2.48118 17.4413 2.84568 17.4711C3.20436 17.5004 3.64838 17.5 4.2002 17.5V16.5ZM0.5 13.8C0.5 14.3518 0.499611 14.7957 0.528909 15.1543C0.558684 15.5187 0.621591 15.8388 0.772484 16.135L1.66349 15.681C1.5964 15.5493 1.55031 15.3755 1.52559 15.0729C1.50039 14.7645 1.5 14.3683 1.5 13.8H0.5ZM2.31879 16.3365C2.03666 16.1927 1.80736 15.9633 1.66349 15.681L0.772484 16.135C1.01211 16.6053 1.39429 16.9877 1.8648 17.2275L2.31879 16.3365ZM16.5 13.8C16.5 14.3684 16.4997 14.7645 16.4745 15.073C16.4498 15.3756 16.4038 15.5493 16.3367 15.681L17.2277 16.135C17.3787 15.8388 17.4415 15.5186 17.4712 15.1542C17.5004 14.7957 17.5 14.3518 17.5 13.8H16.5ZM13.8002 17.5C14.352 17.5 14.7958 17.5004 15.1543 17.4711C15.5187 17.4413 15.8387 17.3784 16.1348 17.2275L15.6808 16.3365C15.5491 16.4036 15.3753 16.4497 15.0729 16.4744C14.7645 16.4996 14.3685 16.5 13.8002 16.5V17.5ZM16.3367 15.681C16.193 15.963 15.9633 16.1926 15.6808 16.3365L16.1348 17.2275C16.605 16.9879 16.9879 16.6056 17.2277 16.135L16.3367 15.681ZM17.5 4.20001C17.5 3.64826 17.5004 3.20434 17.4712 2.84578C17.4415 2.48139 17.3787 2.16125 17.2277 1.86505L16.3367 2.31904C16.4038 2.45066 16.4498 2.62445 16.4745 2.92706C16.4997 3.23551 16.5 3.63166 16.5 4.20001H17.5ZM13.8002 1.5C14.3685 1.5 14.7646 1.50039 15.0729 1.52559C15.3753 1.55031 15.5491 1.59638 15.6808 1.66349L16.1348 0.772484C15.8387 0.621604 15.5187 0.558688 15.1543 0.52891C14.7958 0.499611 14.352 0.5 13.8002 0.5V1.5ZM17.2277 1.86505C16.9879 1.39444 16.605 1.01206 16.1348 0.772484L15.6808 1.66349C15.9632 1.8074 16.193 2.037 16.3367 2.31904L17.2277 1.86505ZM9 8.5H13V7.5H9V8.5ZM9 5.5H13V4.5H9V5.5ZM5.5 17L5.5 1L4.5 1L4.5 17H5.5Z"
        fill={activeColor || "#0B0B0B"}
      />
    </svg>
  );
};

const HeartIcon: FC<{ activeColor: string | undefined }> = ({
  activeColor,
}) => {
  return (
    <svg
      width="20"
      height="18"
      viewBox="0 0 20 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M10 4.19444C8 -0.5 1 0 1 6.00003C1 12.0001 10 17 10 17C10 17 19 12.0001 19 6.00003C19 0 12 -0.5 10 4.19444Z"
        stroke={activeColor || "#444444"}
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  );
};

const CaretLeftIcon: FC<{ activeColor: string | undefined }> = ({
  activeColor,
}) => {
  return (
    <svg
      width="6"
      height="10"
      viewBox="0 0 6 10"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M5 9L1 5L5 1"
        stroke={activeColor || "#0B0B0B"}
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  );
};

const CalenderIcon: FC<{ activeColor: string | undefined }> = ({
  activeColor,
}) => {
  return (
    <svg
      width="18"
      height="20"
      viewBox="0 0 18 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M1 6.4C0.668629 6.4 0.4 6.66863 0.4 7C0.4 7.33137 0.668629 7.6 1 7.6V6.4ZM17 7.6C17.3314 7.6 17.6 7.33137 17.6 7C17.6 6.66863 17.3314 6.4 17 6.4V7.6ZM2.0918 18.782L2.36419 18.2474L2.0918 18.782ZM1.21799 17.908L0.683383 18.1804H0.683383L1.21799 17.908ZM16.7822 17.908L16.2476 17.6356L16.7822 17.908ZM15.9078 18.782L15.6354 18.2474L15.9078 18.782ZM15.9078 3.21799L16.1802 2.68338L15.9078 3.21799ZM16.7822 4.09204L16.2476 4.36444V4.36444L16.7822 4.09204ZM2.0918 3.21799L2.36419 3.75259L2.0918 3.21799ZM1.21799 4.09204L1.75259 4.36444L1.21799 4.09204ZM12.4243 11.4243C12.6586 11.1899 12.6586 10.8101 12.4243 10.5757C12.1899 10.3414 11.8101 10.3414 11.5757 10.5757L12.4243 11.4243ZM8 15L7.57574 15.4243C7.81005 15.6586 8.18995 15.6586 8.42426 15.4243L8 15ZM6.42426 12.5757C6.18995 12.3414 5.81005 12.3414 5.57574 12.5757C5.34142 12.8101 5.34142 13.1899 5.57574 13.4243L6.42426 12.5757ZM13.6 1C13.6 0.668629 13.3314 0.4 13 0.4C12.6686 0.4 12.4 0.668629 12.4 1H13.6ZM12.4 3C12.4 3.33137 12.6686 3.6 13 3.6C13.3314 3.6 13.6 3.33137 13.6 3H12.4ZM5.6 1C5.6 0.668629 5.33137 0.4 5 0.4C4.66863 0.4 4.4 0.668629 4.4 1H5.6ZM4.4 3C4.4 3.33137 4.66863 3.6 5 3.6C5.33137 3.6 5.6 3.33137 5.6 3H4.4ZM1 7.6H17V6.4H1V7.6ZM4.2002 3.6H13.8002V2.4H4.2002V3.6ZM16.4 6.19995V15.8H17.6V6.19995H16.4ZM13.8002 18.4H4.2002V19.6H13.8002V18.4ZM1.6 15.8V6.19995H0.4V15.8H1.6ZM4.2002 18.4C3.63026 18.4 3.23876 18.3995 2.93525 18.3747C2.6387 18.3505 2.4794 18.3061 2.36419 18.2474L1.8194 19.3166C2.13202 19.4759 2.46686 19.5405 2.83753 19.5707C3.20124 19.6005 3.65003 19.6 4.2002 19.6V18.4ZM0.4 15.8C0.4 16.3501 0.399533 16.7988 0.429241 17.1625C0.45952 17.5331 0.524105 17.8678 0.683383 18.1804L1.75259 17.6356C1.69388 17.5204 1.64947 17.3612 1.62526 17.0647C1.60047 16.7613 1.6 16.3699 1.6 15.8H0.4ZM2.36419 18.2474C2.10086 18.1132 1.88686 17.8992 1.75259 17.6356L0.683383 18.1804C0.932608 18.6696 1.33009 19.0673 1.8194 19.3166L2.36419 18.2474ZM16.4 15.8C16.4 16.37 16.3996 16.7614 16.3748 17.0648C16.3507 17.3613 16.3063 17.5205 16.2476 17.6356L17.3168 18.1804C17.4761 17.8678 17.5407 17.5329 17.5709 17.1624C17.6005 16.7988 17.6 16.35 17.6 15.8H16.4ZM13.8002 19.6C14.3504 19.6 14.799 19.6005 15.1625 19.5707C15.533 19.5404 15.8676 19.4758 16.1802 19.3166L15.6354 18.2474C15.5201 18.3061 15.361 18.3505 15.0647 18.3747C14.7614 18.3995 14.3701 18.4 13.8002 18.4V19.6ZM16.2476 17.6356C16.1136 17.8988 15.8991 18.113 15.6354 18.2474L16.1802 19.3166C16.6691 19.0675 17.0674 18.67 17.3168 18.1804L16.2476 17.6356ZM13.8002 3.6C14.3702 3.6 14.7614 3.60047 15.0647 3.62525C15.361 3.64947 15.5201 3.69386 15.6354 3.75259L16.1802 2.68338C15.8676 2.52413 15.533 2.45953 15.1625 2.42924C14.799 2.39953 14.3503 2.4 13.8002 2.4V3.6ZM17.6 6.19995C17.6 5.64986 17.6005 5.20117 17.5709 4.83762C17.5407 4.46706 17.4761 4.1323 17.3168 3.81965L16.2476 4.36444C16.3063 4.4796 16.3507 4.63875 16.3748 4.93516C16.3996 5.23858 16.4 5.62994 16.4 6.19995H17.6ZM15.6354 3.75259C15.8991 3.88694 16.1135 4.10125 16.2476 4.36444L17.3168 3.81965C17.0674 3.33018 16.6692 2.93253 16.1802 2.68338L15.6354 3.75259ZM4.2002 2.4C3.65004 2.4 3.20125 2.39953 2.83755 2.42924C2.46688 2.45951 2.13203 2.52409 1.8194 2.68338L2.36419 3.75259C2.47939 3.6939 2.63868 3.64948 2.93523 3.62526C3.23875 3.60047 3.63025 3.6 4.2002 3.6V2.4ZM1.6 6.19995C1.6 5.63 1.60047 5.23864 1.62526 4.93525C1.64947 4.63888 1.69387 4.47967 1.75259 4.36444L0.683383 3.81965C0.524112 4.13223 0.459522 4.46693 0.429241 4.83753C0.399533 5.20112 0.4 5.6498 0.4 6.19995H1.6ZM1.8194 2.68338C1.33003 2.93273 0.932575 3.33058 0.683383 3.81965L1.75259 4.36444C1.88689 4.10085 2.10092 3.88673 2.36419 3.75259L1.8194 2.68338ZM11.5757 10.5757L7.57574 14.5757L8.42426 15.4243L12.4243 11.4243L11.5757 10.5757ZM8.42426 14.5757L6.42426 12.5757L5.57574 13.4243L7.57574 15.4243L8.42426 14.5757ZM12.4 1V3H13.6V1H12.4ZM4.4 1V3H5.6V1H4.4Z"
        fill={activeColor || "#0B0B0B"}
      />
    </svg>
  );
};

const GearIcon: FC<{ activeColor: string | undefined }> = ({ activeColor }) => {
  return (
    <svg
      width="22"
      height="22"
      viewBox="0 0 22 22"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M19.35 7.92309L18.9838 7.71936C18.9269 7.68773 18.8984 7.67185 18.871 7.6554C18.5979 7.49181 18.3679 7.26539 18.1999 6.99498C18.183 6.96777 18.1664 6.93965 18.1338 6.88326L18.1337 6.88304C18.1012 6.82672 18.0848 6.7984 18.0697 6.77014C17.919 6.48882 17.8379 6.17557 17.8331 5.85647C17.8326 5.82768 17.8331 5.79822 17.834 5.74538L17.8343 5.72633L17.8414 5.30933C17.8529 4.6233 17.8586 4.28033 17.7626 3.97278C17.6776 3.7007 17.5357 3.44986 17.3459 3.23718C17.1317 2.9972 16.8348 2.8261 16.2424 2.4847L16.2393 2.48293L15.7455 2.19837C15.1526 1.85674 14.8561 1.68599 14.5414 1.62085C14.2629 1.56322 13.9754 1.56553 13.698 1.62781C13.3851 1.69803 13.0926 1.87319 12.5086 2.22291L12.5041 2.22559L12.1503 2.43745C12.0943 2.47095 12.066 2.48766 12.038 2.50325C11.7597 2.65797 11.4485 2.74406 11.1303 2.75427C11.0982 2.7553 11.0656 2.7553 11.0004 2.7553H10.9995C10.9347 2.7553 10.9025 2.7553 10.8705 2.75427C10.5516 2.74402 10.2394 2.65754 9.96068 2.50218C9.93362 2.48709 9.90672 2.47094 9.85463 2.43967L9.84863 2.43606L9.49255 2.22229L9.48987 2.22068C8.9023 1.86794 8.60823 1.6914 8.29382 1.62085C8.01525 1.55835 7.72629 1.55625 7.44683 1.61463C7.13092 1.68061 6.83353 1.85319 6.239 2.19824L5.75134 2.48128C5.1599 2.82454 4.8646 2.9961 4.65124 3.23625C4.46248 3.44871 4.32109 3.69897 4.23664 3.97034C4.14119 4.27707 4.14657 4.619 4.15807 5.30274L4.16522 5.7274C4.1663 5.7917 4.16702 5.82388 4.16655 5.85551C4.16182 6.17525 4.0804 6.48918 3.92929 6.771C3.91434 6.79887 3.89824 6.82674 3.86608 6.88241C3.8339 6.93812 3.81783 6.96591 3.80114 6.9928C3.63242 7.26465 3.40094 7.49214 3.12613 7.65601C3.09895 7.67222 3.07104 7.6878 3.01476 7.719L2.65319 7.91936L2.65307 7.91943C2.05158 8.25276 1.7509 8.41939 1.5321 8.65678C1.33853 8.86681 1.19195 9.11589 1.10269 9.38721C1.00192 9.69351 1.0027 10.0369 1.00426 10.7229L1.00427 10.7256L1.00554 11.2877L1.00556 11.2938C1.0071 11.9729 1.00787 12.3134 1.1087 12.6171C1.19816 12.8866 1.344 13.1339 1.53649 13.3427C1.75383 13.5784 2.05212 13.7443 2.64782 14.0757L2.64977 14.0768L3.00811 14.2761L3.01309 14.2789C3.07079 14.311 3.10054 14.3275 3.12914 14.3448C3.40145 14.5087 3.63043 14.7353 3.79772 15.0056C3.81579 15.0348 3.83314 15.0651 3.86781 15.1257L3.86784 15.1257C3.9021 15.1856 3.91943 15.2155 3.93528 15.2455C4.08195 15.5232 4.16121 15.8315 4.16657 16.1455C4.16715 16.1794 4.16661 16.214 4.16544 16.283L4.15856 16.6905L4.15854 16.692C4.14697 17.3771 4.14119 17.7198 4.23713 18.0271C4.32208 18.2992 4.46438 18.55 4.65417 18.7627C4.86869 19.0031 5.1656 19.1745 5.76013 19.5171L6.25383 19.8016C6.84668 20.1432 7.14354 20.314 7.45828 20.3791C7.73673 20.4367 8.02419 20.4344 8.30163 20.3721C8.61457 20.3018 8.90718 20.1266 9.49174 19.7766L9.49548 19.7744L9.8493 19.5625C9.90528 19.529 9.93344 19.5123 9.96149 19.4967C10.2398 19.342 10.5508 19.2559 10.869 19.2457C10.9011 19.2446 10.9337 19.2446 10.9989 19.2446C11.0643 19.2446 11.0975 19.2446 11.1296 19.2457C11.4485 19.2559 11.7602 19.3423 12.0389 19.4977C12.067 19.5133 12.0952 19.5302 12.1512 19.5638L12.5073 19.7776L12.508 19.778C13.0969 20.1316 13.3913 20.3083 13.7061 20.379C13.9847 20.4415 14.2731 20.4437 14.5526 20.3853C14.8685 20.3193 15.1661 20.1468 15.7606 19.8017L16.2483 19.5187C16.8397 19.1754 17.1351 19.0038 17.3484 18.7637C17.5372 18.5512 17.6786 18.301 17.7631 18.0296C17.8585 17.7229 17.853 17.381 17.8415 16.6972L17.8343 16.2726L17.834 16.2511C17.8331 16.2007 17.8326 16.1724 17.833 16.1445C17.8378 15.8248 17.9191 15.5108 18.0702 15.229C18.0851 15.2011 18.1012 15.1733 18.1333 15.1178L18.1334 15.1176C18.1656 15.0619 18.1819 15.034 18.1986 15.0071C18.3674 14.7352 18.5986 14.5079 18.8734 14.344C18.8997 14.3283 18.9271 14.3132 18.9797 14.284L18.9852 14.2809L19.3468 14.0806C19.9484 13.7472 20.2489 13.5806 20.4677 13.3431C20.6613 13.1331 20.8076 12.8841 20.8968 12.6128C20.9977 12.3061 20.9973 11.9622 20.9958 11.2744L20.9945 10.7123C20.993 10.0291 20.9921 9.68744 20.891 9.38281C20.8015 9.11332 20.6556 8.86601 20.4631 8.65725C20.2455 8.42128 19.947 8.25521 19.35 7.92309Z"
        stroke={activeColor || "#0B0B0B"}
        stroke-width="1.2"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    </svg>
  );
};

const menus: MenuClass[] = [
  new MenuClass("home", HomeIcon),
  new MenuClass("users", UsersIcon),
  new MenuClass("calender", CalenderIcon),
  new MenuClass("share", ShareIcon),
  new MenuClass("file", FileIcon),
  new MenuClass("book", BookIcon),
  new MenuClass("heart", HeartIcon),
  new MenuClass("caretLeft", CaretLeftIcon),
];

const SideMenu = () => {
  const [hoveredMenu, setHoveredMenu] = useState("");
  const [activeMenu, setActiveMenu] = useState("home");

  const isHovered = (name: string) => {
    if (name === hoveredMenu) {
      return "#1d4ed8";
    } else {
      return undefined;
    }
  };

  const isActive = (name: string) => {
    if (name === activeMenu) {
      return "#1d4ed8";
    } else {
      return undefined;
    }
  };

  return (
    <div className={css.side_menu}>
      <ul className={css.upper_menu}>
        <div className={css.initials}>
          <span>AS</span>
        </div>
        {menus.map(({ name, Component }) => (
          <>
            <li
              className={`${css.each_menu} ${
                isActive(name) ? css.active : null
              }`}
              onMouseOver={() => setHoveredMenu(name)}
              onClick={() => setActiveMenu(name)}
              onMouseOut={() => setHoveredMenu("")}
            >
              <Component activeColor={isHovered(name) || isActive(name)} />
            </li>
          </>
        ))}
      </ul>
      <ul className={css.lower_menu}>
        <li className={css.each_menu}>
          <GearIcon activeColor={undefined} />
        </li>
        <div className={css.initials}>
          <span>AS</span>
        </div>
      </ul>
    </div>
  );
};

export default SideMenu;
